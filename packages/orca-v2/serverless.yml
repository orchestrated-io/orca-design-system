service: styleguide

frameworkVersion: ">=1.21.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs6.10
  region: ap-southeast-2

plugins:
  - serverless-finch

custom:
  client:
    bucketName: ${env:DOMAIN_NAME}
    distributionFolder: build

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.client.bucketName}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html
    S3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      DependsOn: S3Bucket
      Properties:
        Bucket:
          Ref: S3Bucket
        PolicyDocument:
          Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action:
            - s3:GetObject
            Resource: arn:aws:s3:::${self:custom.client.bucketName}/*
    CDNDistribution:
      Type: AWS::CloudFront::Distribution
      DependsOn: S3Bucket
      Properties:
        DistributionConfig:
          Enabled: true
          Origins:
          - DomainName: ${self:custom.client.bucketName}.s3.amazonaws.com
            Id: S3-${self:custom.client.bucketName}
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
          DefaultRootObject: index.html
          Aliases:
          - ${self:custom.client.bucketName}
          DefaultCacheBehavior:
            AllowedMethods:
            - GET
            - HEAD
            Compress: true
            DefaultTTL: 0
            TargetOriginId: S3-${self:custom.client.bucketName}
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
    HostedZone:
      Type: AWS::Route53::HostedZone
      Properties:
        Name: ${self:custom.client.bucketName}.
    Route:
      Type: AWS::Route53::RecordSet
      DependsOn: 
        - HostedZone
        - CDNDistribution
      Properties:
        HostedZoneName: ${self:custom.client.bucketName}.
        Name: ${self:custom.client.bucketName}.
        Type: A
        AliasTarget:
          DNSName:
            Fn::GetAtt: CDNDistribution.DomainName
          HostedZoneId: Z2FDTNDATAQYW2
